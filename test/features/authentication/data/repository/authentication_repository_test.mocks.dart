// Mocks generated by Mockito 5.4.5 from annotations
// in chat/test/features/authentication/data/repository/authentication_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:chat/features/authentication/data/data_source/authentication_local_data_source.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthenticationLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationLocalDataSource extends _i1.Mock
    implements _i2.AuthenticationLocalDataSource {
  @override
  _i3.Future<void> cacheJWT({required String? jwt}) =>
      (super.noSuchMethod(
            Invocation.method(#cacheJWT, [], {#jwt: jwt}),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String> getJWT() =>
      (super.noSuchMethod(
            Invocation.method(#getJWT, []),
            returnValue: _i3.Future<String>.value(
              _i4.dummyValue<String>(this, Invocation.method(#getJWT, [])),
            ),
            returnValueForMissingStub: _i3.Future<String>.value(
              _i4.dummyValue<String>(this, Invocation.method(#getJWT, [])),
            ),
          )
          as _i3.Future<String>);
}
