// Mocks generated by Mockito 5.4.5 from annotations
// in chat/test/features/chat/ui/bloc/chats_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:chat/core/error/error.dart' as _i6;
import 'package:chat/features/chat/domain/entity/chats.dart' as _i7;
import 'package:chat/features/chat/domain/repository/get_all_chats_repository.dart'
    as _i2;
import 'package:chat/features/chat/domain/usecase/get_all_chats_usecase.dart'
    as _i4;
import 'package:chat/features/chat/domain/usecase/params/get_all_chats_params.dart'
    as _i8;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetAllChatsRepository_0 extends _i1.SmartFake
    implements _i2.GetAllChatsRepository {
  _FakeGetAllChatsRepository_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GetAllChatsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllChatsUseCase extends _i1.Mock
    implements _i4.GetAllChatsUseCase {
  @override
  _i2.GetAllChatsRepository get repo =>
      (super.noSuchMethod(
            Invocation.getter(#repo),
            returnValue: _FakeGetAllChatsRepository_0(
              this,
              Invocation.getter(#repo),
            ),
            returnValueForMissingStub: _FakeGetAllChatsRepository_0(
              this,
              Invocation.getter(#repo),
            ),
          )
          as _i2.GetAllChatsRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Chats>> call(
    _i8.GetAllChatsParams? params,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#call, [params]),
            returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.Chats>>.value(
              _FakeEither_1<_i6.Failure, _i7.Chats>(
                this,
                Invocation.method(#call, [params]),
              ),
            ),
            returnValueForMissingStub:
                _i5.Future<_i3.Either<_i6.Failure, _i7.Chats>>.value(
                  _FakeEither_1<_i6.Failure, _i7.Chats>(
                    this,
                    Invocation.method(#call, [params]),
                  ),
                ),
          )
          as _i5.Future<_i3.Either<_i6.Failure, _i7.Chats>>);
}
